{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","onChange","target","getGif","category","a","query","encodeURI","fetch","response","json","data","gifs","map","id","title","images","url","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","gifObj","useFetchGifs","eachGif","GifExpertApp","eachCategory","i","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAYhD,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAMC,iBACHJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC5CN,EAAc,MAIlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAfc,SAACP,GACvBF,EAAcE,EAAMQ,OAAOF,a,+BCLtBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACN,wCACG,2CACD,UACRC,EAAQ,KAAMC,UAAWH,GAJb,SAKKI,MAAM,GAAD,OAJhB,wCAIgB,YAHb,2CAGa,YAFd,UAEc,YAA8BF,IALxC,cAKZG,EALY,gBAMKA,EAASC,OANd,uBAMVC,EANU,EAMVA,KACFC,EAAOD,EAAKE,KAAK,YAA4B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACjC,MAAO,CAAEF,KAAIC,QAAOE,IAAG,OAACD,QAAD,IAACA,OAAD,EAACA,EAAQE,iBAAiBD,QARnC,kBAUXL,GAVW,4CAAH,sDCENO,EAAc,SAAC,GAAwB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOE,EAAU,EAAVA,IAEtC,OACI,sBAAKG,UAAU,2DAAf,UACI,qBAAKC,IAAKJ,EAAKK,IAAKP,IACpB,4BAAIA,QCHHQ,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EACdd,mBAAU,CAAEsB,KAAK,GAAIY,SAAQ,IADf,mBACjCC,EADiC,KAC1BC,EAD0B,KAMxC,OAHAC,qBAAW,WACPxB,EAAQC,GAAWwB,MAAM,SAAAC,GAAM,OAAIH,EAAU,CAAEd,KAAKiB,EAAQL,SAAQ,SACrE,CAAEpB,IACEqB,EDHmBK,CAAc1B,GAAhCoB,EAF+B,EAE/BA,QAASZ,EAFsB,EAEtBA,KAEjB,OACI,qCACI,oBAAIQ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAY,mBAAGJ,UAAU,mCAAb,wBACd,qBAAKA,UAAW,YAAhB,SAEQR,EAAKC,KAAK,SAAAkB,GAAO,OACb,cAAC,EAAD,eAESA,GADCA,EAAQjB,aEb7BkB,EAAe,WAAO,IAAD,EACM1C,mBAAS,CAAC,aADhB,mBACvBQ,EADuB,KACXT,EADW,KAM9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEQS,EAAWe,KAAK,SAACoB,EAAcC,GAAf,OACZ,cAAC,EAAD,CAEI9B,SAAU6B,GADLA,YCfjCE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ef88f3d0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(inputValue.trim().length > 2 ){\r\n            setCategories( categories => [inputValue,...categories] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGif = async( category ) => {\r\n    const url = 'https://api.giphy.com/v1/gifs/search?';\r\n    const apiKey = 'api_key=nocx7098gYkuybtCFpzqkQpOVMiAIB9y';\r\n    const limit = 'limit=8';\r\n    const query = 'q='+ encodeURI( category );\r\n    const response = await fetch(`${url}&${apiKey}&${limit}&${query}`);\r\n    const { data } = await response.json();\r\n    const gifs = data.map( ({ id, title, images }) => {\r\n        return { id, title, url:images?.downsized_medium.url }\r\n    });\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url} ) => {\r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn animate__delay-2s'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n    \r\n    const { loading, gifs } = useFetchGifs( category );\r\n    \r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\r\n            { loading &&  <p className='animate__animated animate__flash'>Loading...</p>}\r\n            <div className={'card-grid'} >\r\n                {\r\n                    gifs.map( eachGif => (\r\n                        <GifGridItem \r\n                            key={ eachGif.id }\r\n                            { ...eachGif }\r\n                        />\r\n                        ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState( { gifs:[], loading:true } );\r\n    \r\n    useEffect( () => {\r\n        getGif( category ).then( gifObj => setstate( { gifs:gifObj, loading:false } ) );\r\n    }, [ category ]);\r\n    return state;\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Hunter X'])\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories,'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (eachCategory, i) => (\r\n                        <GifGrid \r\n                            key={eachCategory}\r\n                            category={eachCategory} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './components/GifExpertApp'\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}